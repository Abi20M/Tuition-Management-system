{"version":3,"file":"zod-resolver.js","sources":["../../../src/resolvers/zod-resolver/zod-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ninterface ZodError {\n  path: (string | number)[];\n  message: string;\n}\n\ninterface ZodResults {\n  success: boolean;\n  error: {\n    errors: ZodError[];\n  };\n}\n\ninterface ZodSchema {\n  safeParse(values: Record<string, any>): ZodResults;\n}\n\nexport function zodResolver<T extends Record<string, any>>(schema: any) {\n  const _schema: ZodSchema = schema;\n\n  return (values: T): FormErrors => {\n    const parsed = _schema.safeParse(values);\n\n    if (parsed.success) {\n      return {};\n    }\n\n    const results = {};\n\n    parsed.error.errors.forEach((error) => {\n      results[error.path.join('.')] = error.message;\n    });\n\n    return results;\n  };\n}\n"],"names":[],"mappings":"AAAO,SAAS,WAAW,CAAC,MAAM,EAAE;AACpC,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC;AACzB,EAAE,OAAO,CAAC,MAAM,KAAK;AACrB,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC7C,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,MAAM,OAAO,EAAE,CAAC;AAChB,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC3C,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;AACpD,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,OAAO,CAAC;AACnB,GAAG,CAAC;AACJ;;;;"}