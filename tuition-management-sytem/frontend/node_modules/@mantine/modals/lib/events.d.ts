import { ModalSettings, OpenConfirmModal, OpenContextModal } from './context';
type ModalsEvents = {
    openModal(payload: ModalSettings): void;
    closeModal(id: string): void;
    closeAllModals(): void;
    openConfirmModal(payload: OpenConfirmModal): void;
    openContextModal(payload: OpenContextModal & {
        modal: string;
    }): void;
};
export declare const useModalsEvents: (events: ModalsEvents) => void, createEvent: <EventKey extends keyof ModalsEvents>(event: EventKey) => (...payload: Parameters<ModalsEvents[EventKey]>[0] extends undefined ? [undefined?] : [Parameters<ModalsEvents[EventKey]>[0]]) => void;
export declare const openModal: (payload_0: ModalSettings) => void;
export declare const closeModal: (payload_0: string) => void;
export declare const closeAllModals: (payload_0?: undefined) => void;
export declare const openConfirmModal: (payload_0: OpenConfirmModal) => void;
export declare const openContextModal: (payload_0: OpenContextModal<{}> & {
    modal: string;
}) => void;
export {};
//# sourceMappingURL=events.d.ts.map